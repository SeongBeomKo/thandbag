plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT-' + new Date().format("yyyyMMddHHmmss")
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'junit:junit:4.13.1'
    implementation 'org.jetbrains:annotations:20.1.0'
    compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'commons-codec:commons-codec:1.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	implementation 'com.auth0:java-jwt:3.13.0'
	// Swagger
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-bean-validators', version: '2.9.2'
	// S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.0.1.RELEASE'

	// FrontEnd
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.webjars.bower:bootstrap:4.3.1'
	implementation 'org.webjars.bower:vue:2.5.16'
	implementation 'org.webjars.bower:axios:0.17.1'

	// 웹소켓 & STOMP
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.webjars:sockjs-client:1.1.2'
	implementation 'org.webjars:stomp-websocket:2.3.3-1'

	// Json -> Java, Java -> Json
	implementation 'com.google.code.gson:gson:2.8.0'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'
	testImplementation 'it.ozimov:embedded-redis:0.7.2'

	//test
	testCompileOnly 'org.projectlombok:lombok:1.18.12'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
	implementation 'com.pusher:pusher-http-java:1.0.0'

	// ArchUnit (Architecture Test)
	testImplementation 'com.tngtech.archunit:archunit-junit5:0.22.0'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:2.4.1"


}

test {
	finalizedBy 'jacocoTestReport'
	useJUnitPlatform()

	jacoco {
		excludes += ["com/example/thandbag/ThandbagApplication.class",
					 "com/example/thandbag/exceptionHandler/**",
					 "com/example/thandbag/repository/**",
					 "com/example/thandbag/service/KakaoUserService.class"]
	}

}

jacocoTestReport {
	reports {
		html.enabled true
		xml.enabled false
		csv.enabled true
	}

	afterEvaluate {

		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: ["com/example/thandbag/ThandbagApplication.class",
							  "com/example/thandbag/exceptionHandler/**",
							  "com/example/thandbag/repository/**",
							  "com/example/thandbag/service/KakaoUserService.class"])
		}))
	}

	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true
			element = 'CLASS'

			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
			}

			excludes = ['com.example.thandbag.ThandbagApplication']
		}
	}
}